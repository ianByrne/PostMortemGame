// <auto-generated />
using System;
using IanByrne.ResearchProject.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(PostMortemContext))]
    partial class PostMortemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IanByrne.ResearchProject.Shared.Models.Bot", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Bots");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            Name = "Reggie"
                        },
                        new
                        {
                            Id = 2u,
                            Name = "Cow"
                        },
                        new
                        {
                            Id = 3u,
                            Name = "Olive"
                        },
                        new
                        {
                            Id = 4u,
                            Name = "Clarence"
                        });
                });

            modelBuilder.Entity("IanByrne.ResearchProject.Shared.Models.SurveyAnswer", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Answer")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<uint?>("QuestionId")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("UserId")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("SurveyAnswers");
                });

            modelBuilder.Entity("IanByrne.ResearchProject.Shared.Models.SurveyQuestion", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("Question")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SurveyQuestions");

                    b.HasData(
                        new
                        {
                            Id = 1u,
                            Question = "Age",
                            Type = 2
                        },
                        new
                        {
                            Id = 2u,
                            Question = "Gender",
                            Type = 3
                        });
                });

            modelBuilder.Entity("IanByrne.ResearchProject.Shared.Models.Transcript", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("BotId")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<uint?>("UserId")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("BotId");

                    b.HasIndex("UserId");

                    b.ToTable("Transcripts");
                });

            modelBuilder.Entity("IanByrne.ResearchProject.Shared.Models.User", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<string>("CookieId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GameMode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("WinDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IanByrne.ResearchProject.Shared.Models.SurveyAnswer", b =>
                {
                    b.HasOne("IanByrne.ResearchProject.Shared.Models.SurveyQuestion", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");

                    b.HasOne("IanByrne.ResearchProject.Shared.Models.User", "User")
                        .WithMany("Answers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("IanByrne.ResearchProject.Shared.Models.Transcript", b =>
                {
                    b.HasOne("IanByrne.ResearchProject.Shared.Models.Bot", "Bot")
                        .WithMany("Transcripts")
                        .HasForeignKey("BotId");

                    b.HasOne("IanByrne.ResearchProject.Shared.Models.User", "User")
                        .WithMany("Transcripts")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
