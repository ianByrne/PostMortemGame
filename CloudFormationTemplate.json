{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "SubDomainRecord": {
            "Description": "Use 'www' and it will also direct root there",
            "Type": "String",
            "Default": "postmortem"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "can contain only ASCII characters.",
            "Default": "IanByrneNetKey"
        },
        "Route53HostedZoneName": {
            "Description": "Name of the Route53 hosted zone (with trailing dot)",
            "Type": "String",
            "Default": "ianbyrne.net."
        },
        "Route53HostedZoneId": {
            "Description": "Id of the Route53 hosted zone",
            "Type": "String",
            "Default": "Z034476639LBBY0ZCIEYE"
        },
        "BeanstalkSolutionStackName": {
            "Description": "SolutionStackName for the Beanstalk app (last updated 2020-07-06)",
            "Type": "String",
            "Default": "64bit Amazon Linux 2018.03 v2.15.4 running Docker 19.03.6-ce"
        },
        "BeanstalkInstanceType": {
            "Description": "Beanstalk EC2 instance type",
            "Type": "String",
            "Default": "t3.small"
        },
        "AvailabilityZone": {
            "Description": "Availability zone",
            "Type": "String",
            "Default": "us-east-1b"
        },
        "AvailabilityZone2": {
            "Description": "Availability zone 2",
            "Type": "String",
            "Default": "us-east-1c"
        }
    },
    "Mappings": {
        "SubnetConfig": {
            "VPC": {
                "CIDR": "10.0.0.0/16"
            },
            "Public1": {
                "CIDR": "10.0.10.0/24"
            },
            "Public2": {
                "CIDR": "10.0.9.0/24"
            },
            "Private": {
                "CIDR": "10.0.0.0/24"
            }
        }
    },
    "Conditions": {
        "CreateRootRecordSet": {
            "Fn::Equals": [
                {
                    "Ref": "SubDomainRecord"
                },
                "www"
            ]
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "VPC",
                        "CIDR"
                    ]
                },
                "EnableDnsHostnames": true
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "GatewayToInternet": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "Public1",
                        "CIDR"
                    ]
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "MapPublicIpOnLaunch": true
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "Public2",
                        "CIDR"
                    ]
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone2"
                },
                "MapPublicIpOnLaunch": true
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "GatewayToInternet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "PublicSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PrivateSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Fn::FindInMap": [
                        "SubnetConfig",
                        "Private",
                        "CIDR"
                    ]
                },
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "MapPublicIpOnLaunch": true
            }
        },
        "BeanstalkSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SG for the Elastic Beanstalk instances",
                "GroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "Beanstalk"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443,
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "BeanstalkApp": {
            "Type": "AWS::ElasticBeanstalk::Application",
            "Properties": {
                "ApplicationName": {
                    "Ref": "AWS::StackName"
                },
                "ResourceLifecycleConfig": {
                    "ServiceRole": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:iam::",
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                ":role/aws-elasticbeanstalk-service-role"
                            ]
                        ]
                    },
                    "VersionLifecycleConfig": {
                        "MaxCountRule": {
                            "Enabled": true,
                            "DeleteSourceFromS3": true,
                            "MaxCount": 5
                        }
                    }
                }
            }
        },
        "BeanstalkEc2Role": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "BeanstalkEc2Role",
                            {
                                "Ref": "AWS::Region"
                            }
                        ]
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier",
                    "arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker",
                    "arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier"
                ]
            }
        },
        "BeanstalkEc2InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "InstanceProfileName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "BeanstalkEc2InstanceProfile",
                            {
                                "Ref": "AWS::Region"
                            }
                        ]
                    ]
                },
                "Roles": [
                    {
                        "Ref": "BeanstalkEc2Role"
                    }
                ]
            }
        },
        "BeanstalkEnvProd": {
            "Type": "AWS::ElasticBeanstalk::Environment",
            "Properties": {
                "ApplicationName": {
                    "Ref": "BeanstalkApp"
                },
                "SolutionStackName": {
                    "Ref": "BeanstalkSolutionStackName"
                },
                "OptionSettings": [
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "SSHSourceRestriction",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    "tcp, 22, 22, ",
                                    {
                                        "Ref": "BeanstalkSecurityGroup"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "SecurityGroups",
                        "Value": {
                            "Ref": "BeanstalkSecurityGroup"
                        }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "EC2KeyName",
                        "Value": {
                            "Ref": "KeyPairName"
                        }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "IamInstanceProfile",
                        "Value": {
                            "Ref": "BeanstalkEc2InstanceProfile"
                        }
                    },
                    {
                        "Namespace": "aws:autoscaling:launchconfiguration",
                        "OptionName": "InstanceType",
                        "Value": {
                            "Ref": "BeanstalkInstanceType"
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:environment",
                        "OptionName": "EnvironmentType",
                        "Value": "SingleInstance"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:environment",
                        "OptionName": "ServiceRole",
                        "Value": "aws-elasticbeanstalk-service-role"
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "VPCId",
                        "Value": {
                            "Ref": "VPC"
                        }
                    },
                    {
                        "Namespace": "aws:ec2:vpc",
                        "OptionName": "Subnets",
                        "Value": {
                            "Fn::Join": [
                                ",",
                                [
                                    {
                                        "Ref": "PublicSubnet1"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "ASPNETCORE_ENVIRONMENT",
                        "Value": "Production"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "MOUNT_DIRECTORY",
                        "Value": "/var/app/efs"
                    },
                    {
                        "Namespace": "aws:elasticbeanstalk:application:environment",
                        "OptionName": "FILE_SYSTEM_ID",
                        "Value": {
                            "Ref": "EfsFileSystem"
                        }
                    }
                ]
            }
        },
        "Route53SubDomainRecordSet": {
            "Type": "AWS::Route53::RecordSet",
            "DependsOn": "BeanstalkEnvProd",
            "Properties": {
                "HostedZoneName": {
                    "Ref": "Route53HostedZoneName"
                },
                "Type": "A",
                "Name": {
                    "Fn::Join": [
                        ".",
                        [
                            {
                                "Ref": "SubDomainRecord"
                            },
                            {
                                "Ref": "Route53HostedZoneName"
                            }
                        ]
                    ]
                },
                "ResourceRecords": [
                    {
                        "Fn::GetAtt": [
                            "BeanstalkEnvProd",
                            "EndpointURL"
                        ]
                    }
                ],
                "TTL": "300"
            }
        },
        "Route53RootRecordSet": {
            "Condition": "CreateRootRecordSet",
            "Type": "AWS::Route53::RecordSet",
            "DependsOn": "Route53SubDomainRecordSet",
            "Properties": {
                "HostedZoneName": {
                    "Ref": "Route53HostedZoneName"
                },
                "Type": "A",
                "Name": {
                    "Ref": "Route53HostedZoneName"
                },
                "AliasTarget": {
                    "DNSName": {
                        "Ref": "Route53SubDomainRecordSet"
                    },
                    "HostedZoneId": {
                        "Ref": "Route53HostedZoneId"
                    }
                }
            }
        },
        "EfsSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SG for the EFS mount targets",
                "GroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "Efs"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 2049,
                        "ToPort": 2049,
                        "SourceSecurityGroupId": {
                            "Ref": "BeanstalkSecurityGroup"
                        }
                    }
                ]
            }
        },
        "EfsFileSystem": {
            "Type": "AWS::EFS::FileSystem",
            "Properties": {
                "PerformanceMode": "generalPurpose"
            }
        },
        "EfsMountTarget": {
            "Type": "AWS::EFS::MountTarget",
            "Properties": {
                "FileSystemId": {
                    "Ref": "EfsFileSystem"
                },
                "SecurityGroups": [
                    {
                        "Ref": "EfsSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "PrivateSubnet"
                }
            }
        },
        "RdsSecret": {
            "Type": "AWS::SecretsManager::Secret",
            "Properties": {
                "Description": "RDS creds",
                "GenerateSecretString": {
                    "SecretStringTemplate": "{\"username\": \"admin\"}",
                    "GenerateStringKey": "password",
                    "PasswordLength": 16,
                    "ExcludeCharacters": "\"@/\\"
                }
            }
        },
        "RdsSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SG for the RDS instance",
                "GroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "Rds"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 3306,
                        "ToPort": 3306,
                        "SourceSecurityGroupId": {
                            "Ref": "BeanstalkSecurityGroup"
                        }
                    }
                ]
            }
        },
        "RdsSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "RDS subnets",
                "SubnetIds": [
                    {
                        "Ref": "PublicSubnet1"
                    },
                    {
                        "Ref": "PublicSubnet2"
                    }
                ]
            }
        },
        "RdsDatabase": {
            "Type": "AWS::RDS::DBInstance",
            "DependsOn": "GatewayToInternet",
            "Properties": {
                "Engine": "mysql",
                "DBInstanceClass": "db.t3.small",
                "BackupRetentionPeriod": 7,
                "MasterUsername": {
                    "Fn::Sub": "{{resolve:secretsmanager:${RdsSecret}::username}}"
                },
                "MasterUserPassword": {
                    "Fn::Sub": "{{resolve:secretsmanager:${RdsSecret}::password}}"
                },
                "AllocatedStorage": "20",
                "DBSubnetGroupName": {
                    "Ref": "RdsSubnetGroup"
                },
                "VPCSecurityGroups": [
                    {
                        "Ref": "RdsSecurityGroup"
                    }
                ],
                "PubliclyAccessible": true
            }
        },
        "SecretRdsAttachment": {
            "Type": "AWS::SecretsManager::SecretTargetAttachment",
            "Properties": {
                "SecretId": {
                    "Ref": "RdsSecret"
                },
                "TargetId": {
                    "Ref": "RdsDatabase"
                },
                "TargetType": "AWS::RDS::DBInstance"
            }
        }
    },
    "Outputs": {
        "URL": {
            "Description": "The IP of the Elastic Beanstalk environment",
            "Value": {
                "Fn::GetAtt": [
                    "BeanstalkEnvProd",
                    "EndpointURL"
                ]
            }
        }
    }
}